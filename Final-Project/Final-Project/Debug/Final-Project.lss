
Final-Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001cc  00800100  00000ef8  00000f8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ef8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  008002cc  008002cc  00001158  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001158  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001188  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000011c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d92  00000000  00000000  000012a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008be  00000000  00000000  00003032  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d77  00000000  00000000  000038f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d8  00000000  00000000  00004668  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b1  00000000  00000000  00004940  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013fd  00000000  00000000  00004ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000063ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 87 03 	jmp	0x70e	; 0x70e <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ef       	ldi	r30, 0xF8	; 248
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 3c       	cpi	r26, 0xCC	; 204
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	ac ec       	ldi	r26, 0xCC	; 204
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 3e       	cpi	r26, 0xE3	; 227
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 3f 04 	call	0x87e	; 0x87e <main>
  9e:	0c 94 7a 07 	jmp	0xef4	; 0xef4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCDBusyLoop>:
	// Humidity average
	DHT11Data[0] = bufferRH / DHT_NR_OF_SAMPLES;
	
	// Temperature average
	DHT11Data[2] = (bufferTemp / DHT_NR_OF_SAMPLES) + DHT_TEMP_ERROR_OFFSET;
}
  a6:	87 b1       	in	r24, 0x07	; 7
  a8:	83 7c       	andi	r24, 0xC3	; 195
  aa:	87 b9       	out	0x07, r24	; 7
  ac:	8b b1       	in	r24, 0x0b	; 11
  ae:	88 60       	ori	r24, 0x08	; 8
  b0:	8b b9       	out	0x0b, r24	; 11
  b2:	8b b1       	in	r24, 0x0b	; 11
  b4:	8b 7f       	andi	r24, 0xFB	; 251
  b6:	8b b9       	out	0x0b, r24	; 11
  b8:	8b b1       	in	r24, 0x0b	; 11
  ba:	80 61       	ori	r24, 0x10	; 16
  bc:	8b b9       	out	0x0b, r24	; 11
  be:	85 e0       	ldi	r24, 0x05	; 5
  c0:	98 2f       	mov	r25, r24
  c2:	9a 95       	dec	r25
  c4:	f1 f7       	brne	.-4      	; 0xc2 <LCDBusyLoop+0x1c>
  c6:	96 b1       	in	r25, 0x06	; 6
  c8:	96 95       	lsr	r25
  ca:	96 95       	lsr	r25
  cc:	92 95       	swap	r25
  ce:	90 7f       	andi	r25, 0xF0	; 240
  d0:	2b b1       	in	r18, 0x0b	; 11
  d2:	2f 7e       	andi	r18, 0xEF	; 239
  d4:	2b b9       	out	0x0b, r18	; 11
  d6:	28 2f       	mov	r18, r24
  d8:	2a 95       	dec	r18
  da:	f1 f7       	brne	.-4      	; 0xd8 <LCDBusyLoop+0x32>
  dc:	2b b1       	in	r18, 0x0b	; 11
  de:	20 61       	ori	r18, 0x10	; 16
  e0:	2b b9       	out	0x0b, r18	; 11
  e2:	28 2f       	mov	r18, r24
  e4:	2a 95       	dec	r18
  e6:	f1 f7       	brne	.-4      	; 0xe4 <LCDBusyLoop+0x3e>
  e8:	2b b1       	in	r18, 0x0b	; 11
  ea:	2f 7e       	andi	r18, 0xEF	; 239
  ec:	2b b9       	out	0x0b, r18	; 11
  ee:	8a 95       	dec	r24
  f0:	f1 f7       	brne	.-4      	; 0xee <LCDBusyLoop+0x48>
  f2:	99 23       	and	r25, r25
  f4:	0c f3       	brlt	.-62     	; 0xb8 <LCDBusyLoop+0x12>
  f6:	8b b1       	in	r24, 0x0b	; 11
  f8:	87 7f       	andi	r24, 0xF7	; 247
  fa:	8b b9       	out	0x0b, r24	; 11
  fc:	8b b1       	in	r24, 0x0b	; 11
  fe:	84 60       	ori	r24, 0x04	; 4
 100:	8b b9       	out	0x0b, r24	; 11
 102:	87 b1       	in	r24, 0x07	; 7
 104:	8c 63       	ori	r24, 0x3C	; 60
 106:	87 b9       	out	0x07, r24	; 7
 108:	08 95       	ret

0000010a <FlashEnable>:
 10a:	8b b1       	in	r24, 0x0b	; 11
 10c:	80 61       	ori	r24, 0x10	; 16
 10e:	8b b9       	out	0x0b, r24	; 11
 110:	88 ec       	ldi	r24, 0xC8	; 200
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <FlashEnable+0xa>
 118:	8b b1       	in	r24, 0x0b	; 11
 11a:	8f 7e       	andi	r24, 0xEF	; 239
 11c:	8b b9       	out	0x0b, r24	; 11
 11e:	08 95       	ret

00000120 <LCDByte>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	c8 2f       	mov	r28, r24
 126:	d6 2f       	mov	r29, r22
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <LCDBusyLoop>
 12c:	d1 11       	cpse	r29, r1
 12e:	0d c0       	rjmp	.+26     	; 0x14a <LCDByte+0x2a>
 130:	8b b1       	in	r24, 0x0b	; 11
 132:	8b 7f       	andi	r24, 0xFB	; 251
 134:	8b b9       	out	0x0b, r24	; 11
 136:	c0 38       	cpi	r28, 0x80	; 128
 138:	11 f0       	breq	.+4      	; 0x13e <LCDByte+0x1e>
 13a:	c1 30       	cpi	r28, 0x01	; 1
 13c:	71 f4       	brne	.+28     	; 0x15a <LCDByte+0x3a>
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <cursorPosition>
 144:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 148:	08 c0       	rjmp	.+16     	; 0x15a <LCDByte+0x3a>
 14a:	8b b1       	in	r24, 0x0b	; 11
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	8b b9       	out	0x0b, r24	; 11
 150:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <cursorPosition>
 154:	8f 5f       	subi	r24, 0xFF	; 255
 156:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <cursorPosition>
 15a:	8b b1       	in	r24, 0x0b	; 11
 15c:	87 7f       	andi	r24, 0xF7	; 247
 15e:	8b b9       	out	0x0b, r24	; 11
 160:	9c 2f       	mov	r25, r28
 162:	90 7f       	andi	r25, 0xF0	; 240
 164:	28 b1       	in	r18, 0x08	; 8
 166:	89 2f       	mov	r24, r25
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	95 95       	asr	r25
 16c:	87 95       	ror	r24
 16e:	95 95       	asr	r25
 170:	87 95       	ror	r24
 172:	82 2b       	or	r24, r18
 174:	88 b9       	out	0x08, r24	; 8
 176:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 17a:	88 b1       	in	r24, 0x08	; 8
 17c:	83 7c       	andi	r24, 0xC3	; 195
 17e:	88 b9       	out	0x08, r24	; 8
 180:	20 e1       	ldi	r18, 0x10	; 16
 182:	c2 9f       	mul	r28, r18
 184:	c0 01       	movw	r24, r0
 186:	11 24       	eor	r1, r1
 188:	28 b1       	in	r18, 0x08	; 8
 18a:	99 27       	eor	r25, r25
 18c:	95 95       	asr	r25
 18e:	87 95       	ror	r24
 190:	95 95       	asr	r25
 192:	87 95       	ror	r24
 194:	82 2b       	or	r24, r18
 196:	88 b9       	out	0x08, r24	; 8
 198:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 19c:	88 b1       	in	r24, 0x08	; 8
 19e:	83 7c       	andi	r24, 0xC3	; 195
 1a0:	88 b9       	out	0x08, r24	; 8
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <LCDGotoXY>:
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	c8 2f       	mov	r28, r24
 1ae:	d6 2f       	mov	r29, r22
 1b0:	0e 94 53 00 	call	0xa6	; 0xa6 <LCDBusyLoop>
 1b4:	8f ef       	ldi	r24, 0xFF	; 255
 1b6:	8c 0f       	add	r24, r28
 1b8:	8e 3f       	cpi	r24, 0xFE	; 254
 1ba:	08 f0       	brcs	.+2      	; 0x1be <LCDGotoXY+0x16>
 1bc:	c1 e0       	ldi	r28, 0x01	; 1
 1be:	c0 93 01 01 	sts	0x0101, r28	; 0x800101 <cursorPosition>
 1c2:	d0 93 00 01 	sts	0x0100, r29	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c6:	d2 30       	cpi	r29, 0x02	; 2
 1c8:	41 f0       	breq	.+16     	; 0x1da <LCDGotoXY+0x32>
 1ca:	28 f0       	brcs	.+10     	; 0x1d6 <LCDGotoXY+0x2e>
 1cc:	d4 30       	cpi	r29, 0x04	; 4
 1ce:	49 f0       	breq	.+18     	; 0x1e2 <LCDGotoXY+0x3a>
 1d0:	30 f0       	brcs	.+12     	; 0x1de <LCDGotoXY+0x36>
 1d2:	df 3f       	cpi	r29, 0xFF	; 255
 1d4:	39 f4       	brne	.+14     	; 0x1e4 <LCDGotoXY+0x3c>
 1d6:	c1 50       	subi	r28, 0x01	; 1
 1d8:	05 c0       	rjmp	.+10     	; 0x1e4 <LCDGotoXY+0x3c>
 1da:	c1 5c       	subi	r28, 0xC1	; 193
 1dc:	03 c0       	rjmp	.+6      	; 0x1e4 <LCDGotoXY+0x3c>
 1de:	c1 5f       	subi	r28, 0xF1	; 241
 1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <LCDGotoXY+0x3c>
 1e2:	c1 5b       	subi	r28, 0xB1	; 177
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	8c 2f       	mov	r24, r28
 1e8:	80 68       	ori	r24, 0x80	; 128
 1ea:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <LCDWriteString>:
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	ec 01       	movw	r28, r24
 1fe:	01 e0       	ldi	r16, 0x01	; 1
 200:	11 e0       	ldi	r17, 0x01	; 1
 202:	19 c0       	rjmp	.+50     	; 0x236 <LCDWriteString+0x42>
 204:	11 31       	cpi	r17, 0x11	; 17
 206:	90 f0       	brcs	.+36     	; 0x22c <LCDWriteString+0x38>
 208:	01 30       	cpi	r16, 0x01	; 1
 20a:	29 f4       	brne	.+10     	; 0x216 <LCDWriteString+0x22>
 20c:	62 e0       	ldi	r22, 0x02	; 2
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDGotoXY>
 214:	02 e0       	ldi	r16, 0x02	; 2
 216:	02 30       	cpi	r16, 0x02	; 2
 218:	30 f0       	brcs	.+12     	; 0x226 <LCDWriteString+0x32>
 21a:	88 81       	ld	r24, Y
 21c:	80 32       	cpi	r24, 0x20	; 32
 21e:	29 f4       	brne	.+10     	; 0x22a <LCDWriteString+0x36>
 220:	21 96       	adiw	r28, 0x01	; 1
 222:	11 e0       	ldi	r17, 0x01	; 1
 224:	03 c0       	rjmp	.+6      	; 0x22c <LCDWriteString+0x38>
 226:	11 e0       	ldi	r17, 0x01	; 1
 228:	01 c0       	rjmp	.+2      	; 0x22c <LCDWriteString+0x38>
 22a:	11 e0       	ldi	r17, 0x01	; 1
 22c:	61 e0       	ldi	r22, 0x01	; 1
 22e:	89 91       	ld	r24, Y+
 230:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 234:	1f 5f       	subi	r17, 0xFF	; 255
 236:	88 81       	ld	r24, Y
 238:	81 11       	cpse	r24, r1
 23a:	e4 cf       	rjmp	.-56     	; 0x204 <LCDWriteString+0x10>
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	1f 91       	pop	r17
 242:	0f 91       	pop	r16
 244:	08 95       	ret

00000246 <LCDWriteInt>:
 246:	8f 92       	push	r8
 248:	9f 92       	push	r9
 24a:	af 92       	push	r10
 24c:	bf 92       	push	r11
 24e:	df 92       	push	r13
 250:	ef 92       	push	r14
 252:	ff 92       	push	r15
 254:	0f 93       	push	r16
 256:	1f 93       	push	r17
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	cd b7       	in	r28, 0x3d	; 61
 25e:	de b7       	in	r29, 0x3e	; 62
 260:	2a 97       	sbiw	r28, 0x0a	; 10
 262:	0f b6       	in	r0, 0x3f	; 63
 264:	f8 94       	cli
 266:	de bf       	out	0x3e, r29	; 62
 268:	0f be       	out	0x3f, r0	; 63
 26a:	cd bf       	out	0x3d, r28	; 61
 26c:	4b 01       	movw	r8, r22
 26e:	5c 01       	movw	r10, r24
 270:	14 2f       	mov	r17, r20
 272:	fe 01       	movw	r30, r28
 274:	31 96       	adiw	r30, 0x01	; 1
 276:	8a e0       	ldi	r24, 0x0A	; 10
 278:	df 01       	movw	r26, r30
 27a:	1d 92       	st	X+, r1
 27c:	8a 95       	dec	r24
 27e:	e9 f7       	brne	.-6      	; 0x27a <LCDWriteInt+0x34>
 280:	81 14       	cp	r8, r1
 282:	91 04       	cpc	r9, r1
 284:	a1 04       	cpc	r10, r1
 286:	b1 04       	cpc	r11, r1
 288:	11 f0       	breq	.+4      	; 0x28e <LCDWriteInt+0x48>
 28a:	00 e0       	ldi	r16, 0x00	; 0
 28c:	01 c0       	rjmp	.+2      	; 0x290 <LCDWriteInt+0x4a>
 28e:	01 e0       	ldi	r16, 0x01	; 1
 290:	a5 01       	movw	r20, r10
 292:	94 01       	movw	r18, r8
 294:	09 c0       	rjmp	.+18     	; 0x2a8 <LCDWriteInt+0x62>
 296:	0f 5f       	subi	r16, 0xFF	; 255
 298:	ca 01       	movw	r24, r20
 29a:	b9 01       	movw	r22, r18
 29c:	2a e0       	ldi	r18, 0x0A	; 10
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	40 e0       	ldi	r20, 0x00	; 0
 2a2:	50 e0       	ldi	r21, 0x00	; 0
 2a4:	0e 94 39 07 	call	0xe72	; 0xe72 <__divmodsi4>
 2a8:	21 15       	cp	r18, r1
 2aa:	31 05       	cpc	r19, r1
 2ac:	41 05       	cpc	r20, r1
 2ae:	51 05       	cpc	r21, r1
 2b0:	91 f7       	brne	.-28     	; 0x296 <LCDWriteInt+0x50>
 2b2:	10 1b       	sub	r17, r16
 2b4:	0a f4       	brpl	.+2      	; 0x2b8 <LCDWriteInt+0x72>
 2b6:	10 e0       	ldi	r17, 0x00	; 0
 2b8:	bb 20       	and	r11, r11
 2ba:	64 f4       	brge	.+24     	; 0x2d4 <LCDWriteInt+0x8e>
 2bc:	b0 94       	com	r11
 2be:	a0 94       	com	r10
 2c0:	90 94       	com	r9
 2c2:	80 94       	com	r8
 2c4:	81 1c       	adc	r8, r1
 2c6:	91 1c       	adc	r9, r1
 2c8:	a1 1c       	adc	r10, r1
 2ca:	b1 1c       	adc	r11, r1
 2cc:	0f 5f       	subi	r16, 0xFF	; 255
 2ce:	dd 24       	eor	r13, r13
 2d0:	d3 94       	inc	r13
 2d2:	01 c0       	rjmp	.+2      	; 0x2d6 <LCDWriteInt+0x90>
 2d4:	d1 2c       	mov	r13, r1
 2d6:	10 0f       	add	r17, r16
 2d8:	22 c0       	rjmp	.+68     	; 0x31e <LCDWriteInt+0xd8>
 2da:	1a 30       	cpi	r17, 0x0A	; 10
 2dc:	a8 f4       	brcc	.+42     	; 0x308 <LCDWriteInt+0xc2>
 2de:	e1 2e       	mov	r14, r17
 2e0:	f1 2c       	mov	r15, r1
 2e2:	b1 e0       	ldi	r27, 0x01	; 1
 2e4:	eb 1a       	sub	r14, r27
 2e6:	f1 08       	sbc	r15, r1
 2e8:	c5 01       	movw	r24, r10
 2ea:	b4 01       	movw	r22, r8
 2ec:	2a e0       	ldi	r18, 0x0A	; 10
 2ee:	30 e0       	ldi	r19, 0x00	; 0
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	50 e0       	ldi	r21, 0x00	; 0
 2f4:	0e 94 39 07 	call	0xe72	; 0xe72 <__divmodsi4>
 2f8:	e1 e0       	ldi	r30, 0x01	; 1
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	ec 0f       	add	r30, r28
 2fe:	fd 1f       	adc	r31, r29
 300:	ee 0d       	add	r30, r14
 302:	ff 1d       	adc	r31, r15
 304:	60 5d       	subi	r22, 0xD0	; 208
 306:	60 83       	st	Z, r22
 308:	c5 01       	movw	r24, r10
 30a:	b4 01       	movw	r22, r8
 30c:	2a e0       	ldi	r18, 0x0A	; 10
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	50 e0       	ldi	r21, 0x00	; 0
 314:	0e 94 39 07 	call	0xe72	; 0xe72 <__divmodsi4>
 318:	49 01       	movw	r8, r18
 31a:	5a 01       	movw	r10, r20
 31c:	11 50       	subi	r17, 0x01	; 1
 31e:	11 11       	cpse	r17, r1
 320:	dc cf       	rjmp	.-72     	; 0x2da <LCDWriteInt+0x94>
 322:	dd 20       	and	r13, r13
 324:	11 f0       	breq	.+4      	; 0x32a <LCDWriteInt+0xe4>
 326:	8d e2       	ldi	r24, 0x2D	; 45
 328:	89 83       	std	Y+1, r24	; 0x01
 32a:	ce 01       	movw	r24, r28
 32c:	01 96       	adiw	r24, 0x01	; 1
 32e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
 332:	2a 96       	adiw	r28, 0x0a	; 10
 334:	0f b6       	in	r0, 0x3f	; 63
 336:	f8 94       	cli
 338:	de bf       	out	0x3e, r29	; 62
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	cd bf       	out	0x3d, r28	; 61
 33e:	df 91       	pop	r29
 340:	cf 91       	pop	r28
 342:	1f 91       	pop	r17
 344:	0f 91       	pop	r16
 346:	ff 90       	pop	r15
 348:	ef 90       	pop	r14
 34a:	df 90       	pop	r13
 34c:	bf 90       	pop	r11
 34e:	af 90       	pop	r10
 350:	9f 90       	pop	r9
 352:	8f 90       	pop	r8
 354:	08 95       	ret

00000356 <LCDSetup>:
 356:	ff 92       	push	r15
 358:	0f 93       	push	r16
 35a:	1f 93       	push	r17
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	f8 2e       	mov	r15, r24
 362:	88 ee       	ldi	r24, 0xE8	; 232
 364:	93 e0       	ldi	r25, 0x03	; 3
 366:	05 c0       	rjmp	.+10     	; 0x372 <LCDSetup+0x1c>
 368:	e0 e9       	ldi	r30, 0x90	; 144
 36a:	f1 e0       	ldi	r31, 0x01	; 1
 36c:	31 97       	sbiw	r30, 0x01	; 1
 36e:	f1 f7       	brne	.-4      	; 0x36c <LCDSetup+0x16>
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	00 97       	sbiw	r24, 0x00	; 0
 374:	c9 f7       	brne	.-14     	; 0x368 <LCDSetup+0x12>
 376:	87 b1       	in	r24, 0x07	; 7
 378:	8c 63       	ori	r24, 0x3C	; 60
 37a:	87 b9       	out	0x07, r24	; 7
 37c:	88 b1       	in	r24, 0x08	; 8
 37e:	83 7c       	andi	r24, 0xC3	; 195
 380:	88 b9       	out	0x08, r24	; 8
 382:	8a b1       	in	r24, 0x0a	; 10
 384:	84 60       	ori	r24, 0x04	; 4
 386:	8a b9       	out	0x0a, r24	; 10
 388:	8a b1       	in	r24, 0x0a	; 10
 38a:	88 60       	ori	r24, 0x08	; 8
 38c:	8a b9       	out	0x0a, r24	; 10
 38e:	8a b1       	in	r24, 0x0a	; 10
 390:	8c 61       	ori	r24, 0x1C	; 28
 392:	8a b9       	out	0x0a, r24	; 10
 394:	8b b1       	in	r24, 0x0b	; 11
 396:	8f 7e       	andi	r24, 0xEF	; 239
 398:	8b b9       	out	0x0b, r24	; 11
 39a:	8b b1       	in	r24, 0x0b	; 11
 39c:	87 7f       	andi	r24, 0xF7	; 247
 39e:	8b b9       	out	0x0b, r24	; 11
 3a0:	8b b1       	in	r24, 0x0b	; 11
 3a2:	8b 7f       	andi	r24, 0xFB	; 251
 3a4:	8b b9       	out	0x0b, r24	; 11
 3a6:	88 b1       	in	r24, 0x08	; 8
 3a8:	8c 60       	ori	r24, 0x0C	; 12
 3aa:	88 b9       	out	0x08, r24	; 8
 3ac:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 3b0:	88 b1       	in	r24, 0x08	; 8
 3b2:	83 7c       	andi	r24, 0xC3	; 195
 3b4:	88 b9       	out	0x08, r24	; 8
 3b6:	00 e4       	ldi	r16, 0x40	; 64
 3b8:	1c e9       	ldi	r17, 0x9C	; 156
 3ba:	c8 01       	movw	r24, r16
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <LCDSetup+0x66>
 3c0:	88 b1       	in	r24, 0x08	; 8
 3c2:	8c 60       	ori	r24, 0x0C	; 12
 3c4:	88 b9       	out	0x08, r24	; 8
 3c6:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 3ca:	88 b1       	in	r24, 0x08	; 8
 3cc:	83 7c       	andi	r24, 0xC3	; 195
 3ce:	88 b9       	out	0x08, r24	; 8
 3d0:	c0 ea       	ldi	r28, 0xA0	; 160
 3d2:	df e0       	ldi	r29, 0x0F	; 15
 3d4:	ce 01       	movw	r24, r28
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <LCDSetup+0x80>
 3da:	88 b1       	in	r24, 0x08	; 8
 3dc:	8c 60       	ori	r24, 0x0C	; 12
 3de:	88 b9       	out	0x08, r24	; 8
 3e0:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 3e4:	88 b1       	in	r24, 0x08	; 8
 3e6:	83 7c       	andi	r24, 0xC3	; 195
 3e8:	88 b9       	out	0x08, r24	; 8
 3ea:	ce 01       	movw	r24, r28
 3ec:	01 97       	sbiw	r24, 0x01	; 1
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <LCDSetup+0x96>
 3f0:	88 b1       	in	r24, 0x08	; 8
 3f2:	88 60       	ori	r24, 0x08	; 8
 3f4:	88 b9       	out	0x08, r24	; 8
 3f6:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 3fa:	88 b1       	in	r24, 0x08	; 8
 3fc:	83 7c       	andi	r24, 0xC3	; 195
 3fe:	88 b9       	out	0x08, r24	; 8
 400:	ce 01       	movw	r24, r28
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 406:	88 b1       	in	r24, 0x08	; 8
 408:	88 60       	ori	r24, 0x08	; 8
 40a:	88 b9       	out	0x08, r24	; 8
 40c:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 410:	88 b1       	in	r24, 0x08	; 8
 412:	83 7c       	andi	r24, 0xC3	; 195
 414:	88 b9       	out	0x08, r24	; 8
 416:	ce 01       	movw	r24, r28
 418:	01 97       	sbiw	r24, 0x01	; 1
 41a:	f1 f7       	brne	.-4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 41c:	88 b1       	in	r24, 0x08	; 8
 41e:	80 62       	ori	r24, 0x20	; 32
 420:	88 b9       	out	0x08, r24	; 8
 422:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 426:	88 b1       	in	r24, 0x08	; 8
 428:	83 7c       	andi	r24, 0xC3	; 195
 42a:	88 b9       	out	0x08, r24	; 8
 42c:	ce 01       	movw	r24, r28
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 432:	88 b1       	in	r24, 0x08	; 8
 434:	84 60       	ori	r24, 0x04	; 4
 436:	88 b9       	out	0x08, r24	; 8
 438:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 43c:	88 b1       	in	r24, 0x08	; 8
 43e:	83 7c       	andi	r24, 0xC3	; 195
 440:	88 b9       	out	0x08, r24	; 8
 442:	80 e2       	ldi	r24, 0x20	; 32
 444:	9e e4       	ldi	r25, 0x4E	; 78
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 44a:	88 b1       	in	r24, 0x08	; 8
 44c:	88 61       	ori	r24, 0x18	; 24
 44e:	88 b9       	out	0x08, r24	; 8
 450:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 454:	88 b1       	in	r24, 0x08	; 8
 456:	83 7c       	andi	r24, 0xC3	; 195
 458:	88 b9       	out	0x08, r24	; 8
 45a:	ce 01       	movw	r24, r28
 45c:	01 97       	sbiw	r24, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 460:	88 b1       	in	r24, 0x08	; 8
 462:	80 63       	ori	r24, 0x30	; 48
 464:	88 b9       	out	0x08, r24	; 8
 466:	21 97       	sbiw	r28, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 46a:	88 b1       	in	r24, 0x08	; 8
 46c:	83 7c       	andi	r24, 0xC3	; 195
 46e:	88 b9       	out	0x08, r24	; 8
 470:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 474:	88 b1       	in	r24, 0x08	; 8
 476:	88 60       	ori	r24, 0x08	; 8
 478:	88 b9       	out	0x08, r24	; 8
 47a:	0e 94 85 00 	call	0x10a	; 0x10a <FlashEnable>
 47e:	88 b1       	in	r24, 0x08	; 8
 480:	83 7c       	andi	r24, 0xC3	; 195
 482:	88 b9       	out	0x08, r24	; 8
 484:	c8 01       	movw	r24, r16
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	f1 f7       	brne	.-4      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 48a:	60 e0       	ldi	r22, 0x00	; 0
 48c:	8f 2d       	mov	r24, r15
 48e:	8c 60       	ori	r24, 0x0C	; 12
 490:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 494:	60 e0       	ldi	r22, 0x00	; 0
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 49c:	60 e0       	ldi	r22, 0x00	; 0
 49e:	80 e8       	ldi	r24, 0x80	; 128
 4a0:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 4a4:	df 91       	pop	r29
 4a6:	cf 91       	pop	r28
 4a8:	1f 91       	pop	r17
 4aa:	0f 91       	pop	r16
 4ac:	ff 90       	pop	r15
 4ae:	08 95       	ret

000004b0 <DHT11Setup>:
 4b0:	80 e2       	ldi	r24, 0x20	; 32
 4b2:	9e e4       	ldi	r25, 0x4E	; 78
 4b4:	05 c0       	rjmp	.+10     	; 0x4c0 <DHT11Setup+0x10>
 4b6:	e0 e9       	ldi	r30, 0x90	; 144
 4b8:	f1 e0       	ldi	r31, 0x01	; 1
 4ba:	31 97       	sbiw	r30, 0x01	; 1
 4bc:	f1 f7       	brne	.-4      	; 0x4ba <DHT11Setup+0xa>
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	00 97       	sbiw	r24, 0x00	; 0
 4c2:	c9 f7       	brne	.-14     	; 0x4b6 <DHT11Setup+0x6>
 4c4:	84 b1       	in	r24, 0x04	; 4
 4c6:	81 60       	ori	r24, 0x01	; 1
 4c8:	84 b9       	out	0x04, r24	; 4
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	80 93 cc 02 	sts	0x02CC, r24	; 0x8002cc <__data_end>
 4d0:	08 95       	ret

000004d2 <DHT11DisplayTemperatureF>:
 4d2:	86 e0       	ldi	r24, 0x06	; 6
 4d4:	91 e0       	ldi	r25, 0x01	; 1
 4d6:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
 4da:	60 91 cf 02 	lds	r22, 0x02CF	; 0x8002cf <DHT11Data+0x2>
 4de:	70 e0       	ldi	r23, 0x00	; 0
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 40 06 	call	0xc80	; 0xc80 <__floatsisf>
 4e8:	26 e6       	ldi	r18, 0x66	; 102
 4ea:	36 e6       	ldi	r19, 0x66	; 102
 4ec:	46 ee       	ldi	r20, 0xE6	; 230
 4ee:	5f e3       	ldi	r21, 0x3F	; 63
 4f0:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 4f4:	20 e0       	ldi	r18, 0x00	; 0
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	40 e0       	ldi	r20, 0x00	; 0
 4fa:	52 e4       	ldi	r21, 0x42	; 66
 4fc:	0e 94 2a 05 	call	0xa54	; 0xa54 <__addsf3>
 500:	20 e0       	ldi	r18, 0x00	; 0
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	a9 01       	movw	r20, r18
 506:	0e 94 2a 05 	call	0xa54	; 0xa54 <__addsf3>
 50a:	0e 94 08 06 	call	0xc10	; 0xc10 <__fixsfsi>
 50e:	42 e0       	ldi	r20, 0x02	; 2
 510:	0e 94 23 01 	call	0x246	; 0x246 <LCDWriteInt>
 514:	61 e0       	ldi	r22, 0x01	; 1
 516:	8f ed       	ldi	r24, 0xDF	; 223
 518:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 51c:	61 e0       	ldi	r22, 0x01	; 1
 51e:	86 e4       	ldi	r24, 0x46	; 70
 520:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 524:	08 95       	ret

00000526 <DHT11DisplayTemperatureC>:
 526:	86 e0       	ldi	r24, 0x06	; 6
 528:	91 e0       	ldi	r25, 0x01	; 1
 52a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
 52e:	60 91 cf 02 	lds	r22, 0x02CF	; 0x8002cf <DHT11Data+0x2>
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	42 e0       	ldi	r20, 0x02	; 2
 53a:	0e 94 23 01 	call	0x246	; 0x246 <LCDWriteInt>
 53e:	61 e0       	ldi	r22, 0x01	; 1
 540:	8f ed       	ldi	r24, 0xDF	; 223
 542:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 546:	61 e0       	ldi	r22, 0x01	; 1
 548:	83 e4       	ldi	r24, 0x43	; 67
 54a:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 54e:	08 95       	ret

00000550 <DHT11DisplayHumidity>:
 550:	89 e0       	ldi	r24, 0x09	; 9
 552:	91 e0       	ldi	r25, 0x01	; 1
 554:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
 558:	60 91 cd 02 	lds	r22, 0x02CD	; 0x8002cd <DHT11Data>
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	80 e0       	ldi	r24, 0x00	; 0
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	42 e0       	ldi	r20, 0x02	; 2
 564:	0e 94 23 01 	call	0x246	; 0x246 <LCDWriteInt>
 568:	61 e0       	ldi	r22, 0x01	; 1
 56a:	85 e2       	ldi	r24, 0x25	; 37
 56c:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
 570:	08 95       	ret

00000572 <DHT11ReadData>:
 572:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <__data_end>
 576:	81 11       	cpse	r24, r1
 578:	02 c0       	rjmp	.+4      	; 0x57e <DHT11ReadData+0xc>
 57a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <DHT11Setup>
 57e:	84 b1       	in	r24, 0x04	; 4
 580:	81 60       	ori	r24, 0x01	; 1
 582:	84 b9       	out	0x04, r24	; 4
 584:	85 b1       	in	r24, 0x05	; 5
 586:	8e 7f       	andi	r24, 0xFE	; 254
 588:	85 b9       	out	0x05, r24	; 5
 58a:	88 ec       	ldi	r24, 0xC8	; 200
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	05 c0       	rjmp	.+10     	; 0x59a <DHT11ReadData+0x28>
 590:	e0 e9       	ldi	r30, 0x90	; 144
 592:	f1 e0       	ldi	r31, 0x01	; 1
 594:	31 97       	sbiw	r30, 0x01	; 1
 596:	f1 f7       	brne	.-4      	; 0x594 <DHT11ReadData+0x22>
 598:	01 97       	sbiw	r24, 0x01	; 1
 59a:	00 97       	sbiw	r24, 0x00	; 0
 59c:	c9 f7       	brne	.-14     	; 0x590 <DHT11ReadData+0x1e>
 59e:	84 b1       	in	r24, 0x04	; 4
 5a0:	8e 7f       	andi	r24, 0xFE	; 254
 5a2:	84 b9       	out	0x04, r24	; 4
 5a4:	8a ea       	ldi	r24, 0xAA	; 170
 5a6:	8a 95       	dec	r24
 5a8:	f1 f7       	brne	.-4      	; 0x5a6 <DHT11ReadData+0x34>
 5aa:	18 99       	sbic	0x03, 0	; 3
 5ac:	5f c0       	rjmp	.+190    	; 0x66c <DHT11ReadData+0xfa>
 5ae:	88 e4       	ldi	r24, 0x48	; 72
 5b0:	91 e0       	ldi	r25, 0x01	; 1
 5b2:	01 97       	sbiw	r24, 0x01	; 1
 5b4:	f1 f7       	brne	.-4      	; 0x5b2 <DHT11ReadData+0x40>
 5b6:	18 9b       	sbis	0x03, 0	; 3
 5b8:	5b c0       	rjmp	.+182    	; 0x670 <DHT11ReadData+0xfe>
 5ba:	88 e4       	ldi	r24, 0x48	; 72
 5bc:	91 e0       	ldi	r25, 0x01	; 1
 5be:	01 97       	sbiw	r24, 0x01	; 1
 5c0:	f1 f7       	brne	.-4      	; 0x5be <DHT11ReadData+0x4c>
 5c2:	18 99       	sbic	0x03, 0	; 3
 5c4:	57 c0       	rjmp	.+174    	; 0x674 <DHT11ReadData+0x102>
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	33 c0       	rjmp	.+102    	; 0x630 <DHT11ReadData+0xbe>
 5ca:	8f 5f       	subi	r24, 0xFF	; 255
 5cc:	89 30       	cpi	r24, 0x09	; 9
 5ce:	38 f4       	brcc	.+14     	; 0x5de <DHT11ReadData+0x6c>
 5d0:	95 e3       	ldi	r25, 0x35	; 53
 5d2:	9a 95       	dec	r25
 5d4:	f1 f7       	brne	.-4      	; 0x5d2 <DHT11ReadData+0x60>
 5d6:	01 c0       	rjmp	.+2      	; 0x5da <DHT11ReadData+0x68>
 5d8:	80 e0       	ldi	r24, 0x00	; 0
 5da:	18 9b       	sbis	0x03, 0	; 3
 5dc:	f6 cf       	rjmp	.-20     	; 0x5ca <DHT11ReadData+0x58>
 5de:	18 9b       	sbis	0x03, 0	; 3
 5e0:	4b c0       	rjmp	.+150    	; 0x678 <DHT11ReadData+0x106>
 5e2:	85 ed       	ldi	r24, 0xD5	; 213
 5e4:	8a 95       	dec	r24
 5e6:	f1 f7       	brne	.-4      	; 0x5e4 <DHT11ReadData+0x72>
 5e8:	18 9b       	sbis	0x03, 0	; 3
 5ea:	0c c0       	rjmp	.+24     	; 0x604 <DHT11ReadData+0x92>
 5ec:	47 e0       	ldi	r20, 0x07	; 7
 5ee:	50 e0       	ldi	r21, 0x00	; 0
 5f0:	42 1b       	sub	r20, r18
 5f2:	51 09       	sbc	r21, r1
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <DHT11ReadData+0x8c>
 5fa:	88 0f       	add	r24, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	4a 95       	dec	r20
 600:	e2 f7       	brpl	.-8      	; 0x5fa <DHT11ReadData+0x88>
 602:	38 2b       	or	r19, r24
 604:	80 e0       	ldi	r24, 0x00	; 0
 606:	06 c0       	rjmp	.+12     	; 0x614 <DHT11ReadData+0xa2>
 608:	8f 5f       	subi	r24, 0xFF	; 255
 60a:	89 30       	cpi	r24, 0x09	; 9
 60c:	28 f4       	brcc	.+10     	; 0x618 <DHT11ReadData+0xa6>
 60e:	95 e3       	ldi	r25, 0x35	; 53
 610:	9a 95       	dec	r25
 612:	f1 f7       	brne	.-4      	; 0x610 <DHT11ReadData+0x9e>
 614:	18 99       	sbic	0x03, 0	; 3
 616:	f8 cf       	rjmp	.-16     	; 0x608 <DHT11ReadData+0x96>
 618:	2f 5f       	subi	r18, 0xFF	; 255
 61a:	02 c0       	rjmp	.+4      	; 0x620 <DHT11ReadData+0xae>
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	20 e0       	ldi	r18, 0x00	; 0
 620:	28 30       	cpi	r18, 0x08	; 8
 622:	d0 f2       	brcs	.-76     	; 0x5d8 <DHT11ReadData+0x66>
 624:	e6 2f       	mov	r30, r22
 626:	f0 e0       	ldi	r31, 0x00	; 0
 628:	e3 53       	subi	r30, 0x33	; 51
 62a:	fd 4f       	sbci	r31, 0xFD	; 253
 62c:	30 83       	st	Z, r19
 62e:	6f 5f       	subi	r22, 0xFF	; 255
 630:	65 30       	cpi	r22, 0x05	; 5
 632:	a0 f3       	brcs	.-24     	; 0x61c <DHT11ReadData+0xaa>
 634:	80 ef       	ldi	r24, 0xF0	; 240
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	01 97       	sbiw	r24, 0x01	; 1
 63a:	f1 f7       	brne	.-4      	; 0x638 <DHT11ReadData+0xc6>
 63c:	ed ec       	ldi	r30, 0xCD	; 205
 63e:	f2 e0       	ldi	r31, 0x02	; 2
 640:	30 81       	ld	r19, Z
 642:	21 81       	ldd	r18, Z+1	; 0x01
 644:	92 81       	ldd	r25, Z+2	; 0x02
 646:	83 81       	ldd	r24, Z+3	; 0x03
 648:	23 0f       	add	r18, r19
 64a:	92 0f       	add	r25, r18
 64c:	89 0f       	add	r24, r25
 64e:	94 81       	ldd	r25, Z+4	; 0x04
 650:	89 13       	cpse	r24, r25
 652:	14 c0       	rjmp	.+40     	; 0x67c <DHT11ReadData+0x10a>
 654:	80 e1       	ldi	r24, 0x10	; 16
 656:	97 e2       	ldi	r25, 0x27	; 39
 658:	05 c0       	rjmp	.+10     	; 0x664 <DHT11ReadData+0xf2>
 65a:	e0 e9       	ldi	r30, 0x90	; 144
 65c:	f1 e0       	ldi	r31, 0x01	; 1
 65e:	31 97       	sbiw	r30, 0x01	; 1
 660:	f1 f7       	brne	.-4      	; 0x65e <DHT11ReadData+0xec>
 662:	01 97       	sbiw	r24, 0x01	; 1
 664:	00 97       	sbiw	r24, 0x00	; 0
 666:	c9 f7       	brne	.-14     	; 0x65a <DHT11ReadData+0xe8>
 668:	81 e0       	ldi	r24, 0x01	; 1
 66a:	08 95       	ret
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	08 95       	ret
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	08 95       	ret
 674:	80 e0       	ldi	r24, 0x00	; 0
 676:	08 95       	ret
 678:	80 e0       	ldi	r24, 0x00	; 0
 67a:	08 95       	ret
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	08 95       	ret

00000680 <adc_init>:
		}
    }
}

void adc_init(void){
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));		//16Mhz/128 = 125Khz the ADC reference clock
 680:	ea e7       	ldi	r30, 0x7A	; 122
 682:	f0 e0       	ldi	r31, 0x00	; 0
 684:	80 81       	ld	r24, Z
 686:	87 60       	ori	r24, 0x07	; 7
 688:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);								//Voltage reference from Avcc (5v)
 68a:	ac e7       	ldi	r26, 0x7C	; 124
 68c:	b0 e0       	ldi	r27, 0x00	; 0
 68e:	8c 91       	ld	r24, X
 690:	80 64       	ori	r24, 0x40	; 64
 692:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);								//Turn on ADC
 694:	80 81       	ld	r24, Z
 696:	80 68       	ori	r24, 0x80	; 128
 698:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);								//Do an initial conversion because this one is the slowest
 69a:	80 81       	ld	r24, Z
 69c:	80 64       	ori	r24, 0x40	; 64
 69e:	80 83       	st	Z, r24
 6a0:	08 95       	ret

000006a2 <read_adc>:
}

uint16_t read_adc(uint8_t channel){
	ADMUX &= 0xF0;						//Clear the older channel that was read
 6a2:	ec e7       	ldi	r30, 0x7C	; 124
 6a4:	f0 e0       	ldi	r31, 0x00	; 0
 6a6:	90 81       	ld	r25, Z
 6a8:	90 7f       	andi	r25, 0xF0	; 240
 6aa:	90 83       	st	Z, r25
	ADMUX |= channel;					//Defines the new ADC channel to be read
 6ac:	90 81       	ld	r25, Z
 6ae:	89 2b       	or	r24, r25
 6b0:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);                //Starts a new conversion
 6b2:	ea e7       	ldi	r30, 0x7A	; 122
 6b4:	f0 e0       	ldi	r31, 0x00	; 0
 6b6:	80 81       	ld	r24, Z
 6b8:	80 64       	ori	r24, 0x40	; 64
 6ba:	80 83       	st	Z, r24
	while(ADCSRA & (1<<ADSC));          //Wait until the conversion is done
 6bc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 6c0:	86 fd       	sbrc	r24, 6
 6c2:	fc cf       	rjmp	.-8      	; 0x6bc <read_adc+0x1a>
	return (ADCW*5);                    //Returns the ADC value of the chosen channel
 6c4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 6c8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 6cc:	9c 01       	movw	r18, r24
 6ce:	22 0f       	add	r18, r18
 6d0:	33 1f       	adc	r19, r19
 6d2:	22 0f       	add	r18, r18
 6d4:	33 1f       	adc	r19, r19
}
 6d6:	82 0f       	add	r24, r18
 6d8:	93 1f       	adc	r25, r19
 6da:	08 95       	ret

000006dc <USART_init>:

void USART_init(void){
	UBRR0H = (uint8_t)(BAUD_PRESCALER>>8);	//Setting Baud rate
 6dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALER);		//Setting Baud rate
 6e0:	87 e6       	ldi	r24, 0x67	; 103
 6e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);			//Enable receiver (RXEN0) and transmitter (TXENO)
 6e6:	e1 ec       	ldi	r30, 0xC1	; 193
 6e8:	f0 e0       	ldi	r31, 0x00	; 0
 6ea:	88 e1       	ldi	r24, 0x18	; 24
 6ec:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSR0B)|(3<<UCSZ00);		//From datasheet, set format:8data, 2stop bit
 6ee:	20 81       	ld	r18, Z
 6f0:	81 e0       	ldi	r24, 0x01	; 1
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	02 c0       	rjmp	.+4      	; 0x6fa <USART_init+0x1e>
 6f6:	88 0f       	add	r24, r24
 6f8:	99 1f       	adc	r25, r25
 6fa:	2a 95       	dec	r18
 6fc:	e2 f7       	brpl	.-8      	; 0x6f6 <USART_init+0x1a>
 6fe:	86 60       	ori	r24, 0x06	; 6
 700:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt 
 704:	80 81       	ld	r24, Z
 706:	80 68       	ori	r24, 0x80	; 128
 708:	80 83       	st	Z, r24
	sei(); // Enable the Global Interrupt Enable flag so that interrupts can be processed
 70a:	78 94       	sei
 70c:	08 95       	ret

0000070e <__vector_18>:
}

ISR(USART_RX_vect) {
 70e:	1f 92       	push	r1
 710:	0f 92       	push	r0
 712:	0f b6       	in	r0, 0x3f	; 63
 714:	0f 92       	push	r0
 716:	11 24       	eor	r1, r1
 718:	2f 93       	push	r18
 71a:	3f 93       	push	r19
 71c:	4f 93       	push	r20
 71e:	5f 93       	push	r21
 720:	6f 93       	push	r22
 722:	7f 93       	push	r23
 724:	8f 93       	push	r24
 726:	9f 93       	push	r25
 728:	af 93       	push	r26
 72a:	bf 93       	push	r27
 72c:	ef 93       	push	r30
 72e:	ff 93       	push	r31
	char ReceivedByte;
	ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
 730:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	if (ReceivedByte == 'S') {
 734:	83 35       	cpi	r24, 0x53	; 83
 736:	49 f4       	brne	.+18     	; 0x74a <__vector_18+0x3c>
		ReceivedByte = UDR0;
 738:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
		dt = ReceivedByte - 48; //Change interval with which measurements are taken
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	c0 97       	sbiw	r24, 0x30	; 48
 740:	90 93 dc 02 	sts	0x02DC, r25	; 0x8002dc <dt+0x1>
 744:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <dt>
 748:	73 c0       	rjmp	.+230    	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	}
	else if (ReceivedByte == 'T') {
 74a:	84 35       	cpi	r24, 0x54	; 84
 74c:	b9 f4       	brne	.+46     	; 0x77c <__vector_18+0x6e>
		LCDClear();
 74e:	60 e0       	ldi	r22, 0x00	; 0
 750:	81 e0       	ldi	r24, 0x01	; 1
 752:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
		temp = 1;
 756:	81 e0       	ldi	r24, 0x01	; 1
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <temp+0x1>
 75e:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <temp>
		all = 0;
 762:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <all+0x1>
 766:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <all>
		bright = 0;
 76a:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <bright+0x1>
 76e:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <bright>
		humid = 0;
 772:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <humid+0x1>
 776:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <humid>
 77a:	5a c0       	rjmp	.+180    	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	}
	else if (ReceivedByte == 'B') {
 77c:	82 34       	cpi	r24, 0x42	; 66
 77e:	b9 f4       	brne	.+46     	; 0x7ae <__vector_18+0xa0>
		LCDClear();
 780:	60 e0       	ldi	r22, 0x00	; 0
 782:	81 e0       	ldi	r24, 0x01	; 1
 784:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
		bright = 1;
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <bright+0x1>
 790:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <bright>
		all = 0;
 794:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <all+0x1>
 798:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <all>
		temp = 0;
 79c:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <temp+0x1>
 7a0:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <temp>
		humid = 0;
 7a4:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <humid+0x1>
 7a8:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <humid>
 7ac:	41 c0       	rjmp	.+130    	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	}
	else if (ReceivedByte == 'H') {
 7ae:	88 34       	cpi	r24, 0x48	; 72
 7b0:	b9 f4       	brne	.+46     	; 0x7e0 <__vector_18+0xd2>
		LCDClear();
 7b2:	60 e0       	ldi	r22, 0x00	; 0
 7b4:	81 e0       	ldi	r24, 0x01	; 1
 7b6:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
		humid = 1;
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	90 93 de 02 	sts	0x02DE, r25	; 0x8002de <humid+0x1>
 7c2:	80 93 dd 02 	sts	0x02DD, r24	; 0x8002dd <humid>
		all = 0;
 7c6:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <all+0x1>
 7ca:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <all>
		bright = 0;
 7ce:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <bright+0x1>
 7d2:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <bright>
		temp = 0;
 7d6:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <temp+0x1>
 7da:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <temp>
 7de:	28 c0       	rjmp	.+80     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	}
	else if (ReceivedByte == 'A') {
 7e0:	81 34       	cpi	r24, 0x41	; 65
 7e2:	b9 f4       	brne	.+46     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
		LCDClear();
 7e4:	60 e0       	ldi	r22, 0x00	; 0
 7e6:	81 e0       	ldi	r24, 0x01	; 1
 7e8:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
		all = 1;
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <all+0x1>
 7f4:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <all>
		temp = 0;
 7f8:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <temp+0x1>
 7fc:	10 92 d3 02 	sts	0x02D3, r1	; 0x8002d3 <temp>
		bright = 0;
 800:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <bright+0x1>
 804:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <bright>
		humid = 0;
 808:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <humid+0x1>
 80c:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <humid>
 810:	0f c0       	rjmp	.+30     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	}
	else if (ReceivedByte == 'F') {
 812:	86 34       	cpi	r24, 0x46	; 70
 814:	39 f4       	brne	.+14     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
		fahren = 1;
 816:	81 e0       	ldi	r24, 0x01	; 1
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	90 93 e2 02 	sts	0x02E2, r25	; 0x8002e2 <fahren+0x1>
 81e:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <fahren>
 822:	06 c0       	rjmp	.+12     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	}
	else if (ReceivedByte == 'C') {
 824:	83 34       	cpi	r24, 0x43	; 67
 826:	21 f4       	brne	.+8      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
		fahren = 0;
 828:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <fahren+0x1>
 82c:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <fahren>
	}
	ReceivedByte = UDR0; // Next char
 830:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 834:	ff 91       	pop	r31
 836:	ef 91       	pop	r30
 838:	bf 91       	pop	r27
 83a:	af 91       	pop	r26
 83c:	9f 91       	pop	r25
 83e:	8f 91       	pop	r24
 840:	7f 91       	pop	r23
 842:	6f 91       	pop	r22
 844:	5f 91       	pop	r21
 846:	4f 91       	pop	r20
 848:	3f 91       	pop	r19
 84a:	2f 91       	pop	r18
 84c:	0f 90       	pop	r0
 84e:	0f be       	out	0x3f, r0	; 63
 850:	0f 90       	pop	r0
 852:	1f 90       	pop	r1
 854:	18 95       	reti

00000856 <USART_send>:

void USART_send(unsigned char data){
	while(!(UCSR0A & (1<<UDRE0)));			//While UDRE0 (USART Data Register flag) is clear,
 856:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 85a:	95 ff       	sbrs	r25, 5
 85c:	fc cf       	rjmp	.-8      	; 0x856 <USART_send>
	UDR0 = data;	
 85e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 862:	08 95       	ret

00000864 <USART_putstring>:
}

void USART_putstring(char* StringPtr){
 864:	cf 93       	push	r28
 866:	df 93       	push	r29
 868:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00){
 86a:	03 c0       	rjmp	.+6      	; 0x872 <USART_putstring+0xe>
		USART_send(*StringPtr);
 86c:	0e 94 2b 04 	call	0x856	; 0x856 <USART_send>
	StringPtr++;}	
 870:	21 96       	adiw	r28, 0x01	; 1
	while(!(UCSR0A & (1<<UDRE0)));			//While UDRE0 (USART Data Register flag) is clear,
	UDR0 = data;	
}

void USART_putstring(char* StringPtr){
	while(*StringPtr != 0x00){
 872:	88 81       	ld	r24, Y
 874:	81 11       	cpse	r24, r1
 876:	fa cf       	rjmp	.-12     	; 0x86c <USART_putstring+0x8>
		USART_send(*StringPtr);
	StringPtr++;}	
}
 878:	df 91       	pop	r29
 87a:	cf 91       	pop	r28
 87c:	08 95       	ret

0000087e <main>:
int all;
int fahren;  //Boolean to determine whether temp is C or F

int main(void)
{
	all = 1;
 87e:	81 e0       	ldi	r24, 0x01	; 1
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <all+0x1>
 886:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <all>
	//humid = 1;
	//Initialize LCD
	LCDSetup(LCD_CURSOR_NONE);	
 88a:	80 e0       	ldi	r24, 0x00	; 0
 88c:	0e 94 ab 01 	call	0x356	; 0x356 <LCDSetup>
	adc_init();
 890:	0e 94 40 03 	call	0x680	; 0x680 <adc_init>
	USART_init();
 894:	0e 94 6e 03 	call	0x6dc	; 0x6dc <USART_init>

	USART_putstring("Measurements are being taken 1s apart. \r \n");
 898:	8c e0       	ldi	r24, 0x0C	; 12
 89a:	91 e0       	ldi	r25, 0x01	; 1
 89c:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("To specify the spacing of measurements in seconds, enter the command Sx, where x is desired seconds. \r \n");
 8a0:	87 e3       	ldi	r24, 0x37	; 55
 8a2:	91 e0       	ldi	r25, 0x01	; 1
 8a4:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("To specify which measurement to view, enter the command: \r \n");
 8a8:	80 ea       	ldi	r24, 0xA0	; 160
 8aa:	91 e0       	ldi	r25, 0x01	; 1
 8ac:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("T for temperature, \r \n");
 8b0:	8d ed       	ldi	r24, 0xDD	; 221
 8b2:	91 e0       	ldi	r25, 0x01	; 1
 8b4:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("B for brightness, \r \n");
 8b8:	84 ef       	ldi	r24, 0xF4	; 244
 8ba:	91 e0       	ldi	r25, 0x01	; 1
 8bc:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("H for humidity, or \r \n");
 8c0:	8a e0       	ldi	r24, 0x0A	; 10
 8c2:	92 e0       	ldi	r25, 0x02	; 2
 8c4:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("A for all measurements. \r \n");
 8c8:	81 e2       	ldi	r24, 0x21	; 33
 8ca:	92 e0       	ldi	r25, 0x02	; 2
 8cc:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("To display temperature in Fahrenheit, enter the command F. \r \n");
 8d0:	8d e3       	ldi	r24, 0x3D	; 61
 8d2:	92 e0       	ldi	r25, 0x02	; 2
 8d4:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	USART_putstring("To display temperature in Celsius, enter the command C. \r \n");
 8d8:	8c e7       	ldi	r24, 0x7C	; 124
 8da:	92 e0       	ldi	r25, 0x02	; 2
 8dc:	0e 94 32 04 	call	0x864	; 0x864 <USART_putstring>
	
    while (1) 
    {
		dt = 0;
 8e0:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <dt+0x1>
 8e4:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <dt>
		delay = dt*1000;		//Delay is in ms
 8e8:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <delay+0x1>
 8ec:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <delay>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 8f0:	81 e0       	ldi	r24, 0x01	; 1
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	01 97       	sbiw	r24, 0x01	; 1
 8f6:	f1 f7       	brne	.-4      	; 0x8f4 <main+0x76>
		_delay_ms(delay);
	
		DHTreturnCode = DHT11ReadData();		//Function to read and check the sensor data
 8f8:	0e 94 b9 02 	call	0x572	; 0x572 <DHT11ReadData>
 8fc:	80 93 d2 02 	sts	0x02D2, r24	; 0x8002d2 <DHTreturnCode>
		if(DHTreturnCode == -1){
 900:	8f 3f       	cpi	r24, 0xFF	; 255
 902:	49 f4       	brne	.+18     	; 0x916 <__stack+0x17>
			LCDHome();
 904:	60 e0       	ldi	r22, 0x00	; 0
 906:	80 e8       	ldi	r24, 0x80	; 128
 908:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
			LCDWriteString("Checksum Error");	//Error message on lcd to show data was received incorrectly
 90c:	88 eb       	ldi	r24, 0xB8	; 184
 90e:	92 e0       	ldi	r25, 0x02	; 2
 910:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
 914:	e5 cf       	rjmp	.-54     	; 0x8e0 <main+0x62>
		} else {
			if (all == 1) {
 916:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <all>
 91a:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <all+0x1>
 91e:	01 97       	sbiw	r24, 0x01	; 1
 920:	09 f0       	breq	.+2      	; 0x924 <__stack+0x25>
 922:	41 c0       	rjmp	.+130    	; 0x9a6 <__stack+0xa7>
				LCDHome();
 924:	60 e0       	ldi	r22, 0x00	; 0
 926:	80 e8       	ldi	r24, 0x80	; 128
 928:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
				if (fahren == 1) {
 92c:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <fahren>
 930:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <fahren+0x1>
 934:	01 97       	sbiw	r24, 0x01	; 1
 936:	19 f4       	brne	.+6      	; 0x93e <__stack+0x3f>
					DHT11DisplayTemperatureF();			//Display Temp F
 938:	0e 94 69 02 	call	0x4d2	; 0x4d2 <DHT11DisplayTemperatureF>
 93c:	02 c0       	rjmp	.+4      	; 0x942 <__stack+0x43>
				} else {
					DHT11DisplayTemperatureC();			//Display Temp C
 93e:	0e 94 93 02 	call	0x526	; 0x526 <DHT11DisplayTemperatureC>
				}
				LCDGotoXY(8,1);
 942:	61 e0       	ldi	r22, 0x01	; 1
 944:	88 e0       	ldi	r24, 0x08	; 8
 946:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDGotoXY>
				LCDWriteString("B:");				//Display Brightness
 94a:	87 ec       	ldi	r24, 0xC7	; 199
 94c:	92 e0       	ldi	r25, 0x02	; 2
 94e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
				adc_value =  ((float)read_adc(0)/2000)*100;
 952:	80 e0       	ldi	r24, 0x00	; 0
 954:	0e 94 51 03 	call	0x6a2	; 0x6a2 <read_adc>
 958:	bc 01       	movw	r22, r24
 95a:	80 e0       	ldi	r24, 0x00	; 0
 95c:	90 e0       	ldi	r25, 0x00	; 0
 95e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__floatunsisf>
 962:	20 e0       	ldi	r18, 0x00	; 0
 964:	30 e0       	ldi	r19, 0x00	; 0
 966:	4a ef       	ldi	r20, 0xFA	; 250
 968:	54 e4       	ldi	r21, 0x44	; 68
 96a:	0e 94 96 05 	call	0xb2c	; 0xb2c <__divsf3>
 96e:	20 e0       	ldi	r18, 0x00	; 0
 970:	30 e0       	ldi	r19, 0x00	; 0
 972:	48 ec       	ldi	r20, 0xC8	; 200
 974:	52 e4       	ldi	r21, 0x42	; 66
 976:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 97a:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__fixunssfsi>
 97e:	70 93 d8 02 	sts	0x02D8, r23	; 0x8002d8 <adc_value+0x1>
 982:	60 93 d7 02 	sts	0x02D7, r22	; 0x8002d7 <adc_value>
				LCDWriteInt(adc_value,3);
 986:	80 e0       	ldi	r24, 0x00	; 0
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	43 e0       	ldi	r20, 0x03	; 3
 98c:	0e 94 23 01 	call	0x246	; 0x246 <LCDWriteInt>
				LCDWriteString("%");
 990:	8a ec       	ldi	r24, 0xCA	; 202
 992:	92 e0       	ldi	r25, 0x02	; 2
 994:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
				LCDGotoXY(1,2);
 998:	62 e0       	ldi	r22, 0x02	; 2
 99a:	81 e0       	ldi	r24, 0x01	; 1
 99c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDGotoXY>
				DHT11DisplayHumidity();				//Display Humidity
 9a0:	0e 94 a8 02 	call	0x550	; 0x550 <DHT11DisplayHumidity>
 9a4:	9d cf       	rjmp	.-198    	; 0x8e0 <main+0x62>
			}
			else if (temp == 1) {
 9a6:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <temp>
 9aa:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <temp+0x1>
 9ae:	01 97       	sbiw	r24, 0x01	; 1
 9b0:	81 f4       	brne	.+32     	; 0x9d2 <__stack+0xd3>
				LCDHome(); 
 9b2:	60 e0       	ldi	r22, 0x00	; 0
 9b4:	80 e8       	ldi	r24, 0x80	; 128
 9b6:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
				if (fahren == 1) {
 9ba:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <fahren>
 9be:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <fahren+0x1>
 9c2:	01 97       	sbiw	r24, 0x01	; 1
 9c4:	19 f4       	brne	.+6      	; 0x9cc <__stack+0xcd>
					DHT11DisplayTemperatureF();			//Display Temp F
 9c6:	0e 94 69 02 	call	0x4d2	; 0x4d2 <DHT11DisplayTemperatureF>
 9ca:	8a cf       	rjmp	.-236    	; 0x8e0 <main+0x62>
				} else {
					DHT11DisplayTemperatureC();			//Display Temp C
 9cc:	0e 94 93 02 	call	0x526	; 0x526 <DHT11DisplayTemperatureC>
 9d0:	87 cf       	rjmp	.-242    	; 0x8e0 <main+0x62>
				}
			}
			else if (bright == 1) {
 9d2:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <bright>
 9d6:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <bright+0x1>
 9da:	01 97       	sbiw	r24, 0x01	; 1
 9dc:	61 f5       	brne	.+88     	; 0xa36 <__stack+0x137>
				LCDHome();
 9de:	60 e0       	ldi	r22, 0x00	; 0
 9e0:	80 e8       	ldi	r24, 0x80	; 128
 9e2:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
				LCDWriteString("B:");				//Display Brightness
 9e6:	87 ec       	ldi	r24, 0xC7	; 199
 9e8:	92 e0       	ldi	r25, 0x02	; 2
 9ea:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
				adc_value =  ((float)read_adc(0)/5050)*100;
 9ee:	80 e0       	ldi	r24, 0x00	; 0
 9f0:	0e 94 51 03 	call	0x6a2	; 0x6a2 <read_adc>
 9f4:	bc 01       	movw	r22, r24
 9f6:	80 e0       	ldi	r24, 0x00	; 0
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__floatunsisf>
 9fe:	20 e0       	ldi	r18, 0x00	; 0
 a00:	30 ed       	ldi	r19, 0xD0	; 208
 a02:	4d e9       	ldi	r20, 0x9D	; 157
 a04:	55 e4       	ldi	r21, 0x45	; 69
 a06:	0e 94 96 05 	call	0xb2c	; 0xb2c <__divsf3>
 a0a:	20 e0       	ldi	r18, 0x00	; 0
 a0c:	30 e0       	ldi	r19, 0x00	; 0
 a0e:	48 ec       	ldi	r20, 0xC8	; 200
 a10:	52 e4       	ldi	r21, 0x42	; 66
 a12:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 a16:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__fixunssfsi>
 a1a:	70 93 d8 02 	sts	0x02D8, r23	; 0x8002d8 <adc_value+0x1>
 a1e:	60 93 d7 02 	sts	0x02D7, r22	; 0x8002d7 <adc_value>
				LCDWriteInt(adc_value,3);
 a22:	80 e0       	ldi	r24, 0x00	; 0
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	43 e0       	ldi	r20, 0x03	; 3
 a28:	0e 94 23 01 	call	0x246	; 0x246 <LCDWriteInt>
				LCDWriteString("%");
 a2c:	8a ec       	ldi	r24, 0xCA	; 202
 a2e:	92 e0       	ldi	r25, 0x02	; 2
 a30:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LCDWriteString>
 a34:	55 cf       	rjmp	.-342    	; 0x8e0 <main+0x62>
			}
			else if (humid == 1) {
 a36:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <humid>
 a3a:	90 91 de 02 	lds	r25, 0x02DE	; 0x8002de <humid+0x1>
 a3e:	01 97       	sbiw	r24, 0x01	; 1
 a40:	09 f0       	breq	.+2      	; 0xa44 <__stack+0x145>
 a42:	4e cf       	rjmp	.-356    	; 0x8e0 <main+0x62>
				LCDHome();
 a44:	60 e0       	ldi	r22, 0x00	; 0
 a46:	80 e8       	ldi	r24, 0x80	; 128
 a48:	0e 94 90 00 	call	0x120	; 0x120 <LCDByte>
				DHT11DisplayHumidity();				//Display Humidity
 a4c:	0e 94 a8 02 	call	0x550	; 0x550 <DHT11DisplayHumidity>
 a50:	47 cf       	rjmp	.-370    	; 0x8e0 <main+0x62>

00000a52 <__subsf3>:
 a52:	50 58       	subi	r21, 0x80	; 128

00000a54 <__addsf3>:
 a54:	bb 27       	eor	r27, r27
 a56:	aa 27       	eor	r26, r26
 a58:	0e 94 41 05 	call	0xa82	; 0xa82 <__addsf3x>
 a5c:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__fp_round>
 a60:	0e 94 84 06 	call	0xd08	; 0xd08 <__fp_pscA>
 a64:	38 f0       	brcs	.+14     	; 0xa74 <__addsf3+0x20>
 a66:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fp_pscB>
 a6a:	20 f0       	brcs	.+8      	; 0xa74 <__addsf3+0x20>
 a6c:	39 f4       	brne	.+14     	; 0xa7c <__addsf3+0x28>
 a6e:	9f 3f       	cpi	r25, 0xFF	; 255
 a70:	19 f4       	brne	.+6      	; 0xa78 <__addsf3+0x24>
 a72:	26 f4       	brtc	.+8      	; 0xa7c <__addsf3+0x28>
 a74:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__fp_nan>
 a78:	0e f4       	brtc	.+2      	; 0xa7c <__addsf3+0x28>
 a7a:	e0 95       	com	r30
 a7c:	e7 fb       	bst	r30, 7
 a7e:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_inf>

00000a82 <__addsf3x>:
 a82:	e9 2f       	mov	r30, r25
 a84:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fp_split3>
 a88:	58 f3       	brcs	.-42     	; 0xa60 <__addsf3+0xc>
 a8a:	ba 17       	cp	r27, r26
 a8c:	62 07       	cpc	r22, r18
 a8e:	73 07       	cpc	r23, r19
 a90:	84 07       	cpc	r24, r20
 a92:	95 07       	cpc	r25, r21
 a94:	20 f0       	brcs	.+8      	; 0xa9e <__addsf3x+0x1c>
 a96:	79 f4       	brne	.+30     	; 0xab6 <__addsf3x+0x34>
 a98:	a6 f5       	brtc	.+104    	; 0xb02 <__addsf3x+0x80>
 a9a:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__fp_zero>
 a9e:	0e f4       	brtc	.+2      	; 0xaa2 <__addsf3x+0x20>
 aa0:	e0 95       	com	r30
 aa2:	0b 2e       	mov	r0, r27
 aa4:	ba 2f       	mov	r27, r26
 aa6:	a0 2d       	mov	r26, r0
 aa8:	0b 01       	movw	r0, r22
 aaa:	b9 01       	movw	r22, r18
 aac:	90 01       	movw	r18, r0
 aae:	0c 01       	movw	r0, r24
 ab0:	ca 01       	movw	r24, r20
 ab2:	a0 01       	movw	r20, r0
 ab4:	11 24       	eor	r1, r1
 ab6:	ff 27       	eor	r31, r31
 ab8:	59 1b       	sub	r21, r25
 aba:	99 f0       	breq	.+38     	; 0xae2 <__addsf3x+0x60>
 abc:	59 3f       	cpi	r21, 0xF9	; 249
 abe:	50 f4       	brcc	.+20     	; 0xad4 <__addsf3x+0x52>
 ac0:	50 3e       	cpi	r21, 0xE0	; 224
 ac2:	68 f1       	brcs	.+90     	; 0xb1e <__addsf3x+0x9c>
 ac4:	1a 16       	cp	r1, r26
 ac6:	f0 40       	sbci	r31, 0x00	; 0
 ac8:	a2 2f       	mov	r26, r18
 aca:	23 2f       	mov	r18, r19
 acc:	34 2f       	mov	r19, r20
 ace:	44 27       	eor	r20, r20
 ad0:	58 5f       	subi	r21, 0xF8	; 248
 ad2:	f3 cf       	rjmp	.-26     	; 0xaba <__addsf3x+0x38>
 ad4:	46 95       	lsr	r20
 ad6:	37 95       	ror	r19
 ad8:	27 95       	ror	r18
 ada:	a7 95       	ror	r26
 adc:	f0 40       	sbci	r31, 0x00	; 0
 ade:	53 95       	inc	r21
 ae0:	c9 f7       	brne	.-14     	; 0xad4 <__addsf3x+0x52>
 ae2:	7e f4       	brtc	.+30     	; 0xb02 <__addsf3x+0x80>
 ae4:	1f 16       	cp	r1, r31
 ae6:	ba 0b       	sbc	r27, r26
 ae8:	62 0b       	sbc	r22, r18
 aea:	73 0b       	sbc	r23, r19
 aec:	84 0b       	sbc	r24, r20
 aee:	ba f0       	brmi	.+46     	; 0xb1e <__addsf3x+0x9c>
 af0:	91 50       	subi	r25, 0x01	; 1
 af2:	a1 f0       	breq	.+40     	; 0xb1c <__addsf3x+0x9a>
 af4:	ff 0f       	add	r31, r31
 af6:	bb 1f       	adc	r27, r27
 af8:	66 1f       	adc	r22, r22
 afa:	77 1f       	adc	r23, r23
 afc:	88 1f       	adc	r24, r24
 afe:	c2 f7       	brpl	.-16     	; 0xaf0 <__addsf3x+0x6e>
 b00:	0e c0       	rjmp	.+28     	; 0xb1e <__addsf3x+0x9c>
 b02:	ba 0f       	add	r27, r26
 b04:	62 1f       	adc	r22, r18
 b06:	73 1f       	adc	r23, r19
 b08:	84 1f       	adc	r24, r20
 b0a:	48 f4       	brcc	.+18     	; 0xb1e <__addsf3x+0x9c>
 b0c:	87 95       	ror	r24
 b0e:	77 95       	ror	r23
 b10:	67 95       	ror	r22
 b12:	b7 95       	ror	r27
 b14:	f7 95       	ror	r31
 b16:	9e 3f       	cpi	r25, 0xFE	; 254
 b18:	08 f0       	brcs	.+2      	; 0xb1c <__addsf3x+0x9a>
 b1a:	b0 cf       	rjmp	.-160    	; 0xa7c <__addsf3+0x28>
 b1c:	93 95       	inc	r25
 b1e:	88 0f       	add	r24, r24
 b20:	08 f0       	brcs	.+2      	; 0xb24 <__addsf3x+0xa2>
 b22:	99 27       	eor	r25, r25
 b24:	ee 0f       	add	r30, r30
 b26:	97 95       	ror	r25
 b28:	87 95       	ror	r24
 b2a:	08 95       	ret

00000b2c <__divsf3>:
 b2c:	0e 94 aa 05 	call	0xb54	; 0xb54 <__divsf3x>
 b30:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__fp_round>
 b34:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fp_pscB>
 b38:	58 f0       	brcs	.+22     	; 0xb50 <__divsf3+0x24>
 b3a:	0e 94 84 06 	call	0xd08	; 0xd08 <__fp_pscA>
 b3e:	40 f0       	brcs	.+16     	; 0xb50 <__divsf3+0x24>
 b40:	29 f4       	brne	.+10     	; 0xb4c <__divsf3+0x20>
 b42:	5f 3f       	cpi	r21, 0xFF	; 255
 b44:	29 f0       	breq	.+10     	; 0xb50 <__divsf3+0x24>
 b46:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_inf>
 b4a:	51 11       	cpse	r21, r1
 b4c:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__fp_szero>
 b50:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__fp_nan>

00000b54 <__divsf3x>:
 b54:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fp_split3>
 b58:	68 f3       	brcs	.-38     	; 0xb34 <__divsf3+0x8>

00000b5a <__divsf3_pse>:
 b5a:	99 23       	and	r25, r25
 b5c:	b1 f3       	breq	.-20     	; 0xb4a <__divsf3+0x1e>
 b5e:	55 23       	and	r21, r21
 b60:	91 f3       	breq	.-28     	; 0xb46 <__divsf3+0x1a>
 b62:	95 1b       	sub	r25, r21
 b64:	55 0b       	sbc	r21, r21
 b66:	bb 27       	eor	r27, r27
 b68:	aa 27       	eor	r26, r26
 b6a:	62 17       	cp	r22, r18
 b6c:	73 07       	cpc	r23, r19
 b6e:	84 07       	cpc	r24, r20
 b70:	38 f0       	brcs	.+14     	; 0xb80 <__divsf3_pse+0x26>
 b72:	9f 5f       	subi	r25, 0xFF	; 255
 b74:	5f 4f       	sbci	r21, 0xFF	; 255
 b76:	22 0f       	add	r18, r18
 b78:	33 1f       	adc	r19, r19
 b7a:	44 1f       	adc	r20, r20
 b7c:	aa 1f       	adc	r26, r26
 b7e:	a9 f3       	breq	.-22     	; 0xb6a <__divsf3_pse+0x10>
 b80:	35 d0       	rcall	.+106    	; 0xbec <__divsf3_pse+0x92>
 b82:	0e 2e       	mov	r0, r30
 b84:	3a f0       	brmi	.+14     	; 0xb94 <__divsf3_pse+0x3a>
 b86:	e0 e8       	ldi	r30, 0x80	; 128
 b88:	32 d0       	rcall	.+100    	; 0xbee <__divsf3_pse+0x94>
 b8a:	91 50       	subi	r25, 0x01	; 1
 b8c:	50 40       	sbci	r21, 0x00	; 0
 b8e:	e6 95       	lsr	r30
 b90:	00 1c       	adc	r0, r0
 b92:	ca f7       	brpl	.-14     	; 0xb86 <__divsf3_pse+0x2c>
 b94:	2b d0       	rcall	.+86     	; 0xbec <__divsf3_pse+0x92>
 b96:	fe 2f       	mov	r31, r30
 b98:	29 d0       	rcall	.+82     	; 0xbec <__divsf3_pse+0x92>
 b9a:	66 0f       	add	r22, r22
 b9c:	77 1f       	adc	r23, r23
 b9e:	88 1f       	adc	r24, r24
 ba0:	bb 1f       	adc	r27, r27
 ba2:	26 17       	cp	r18, r22
 ba4:	37 07       	cpc	r19, r23
 ba6:	48 07       	cpc	r20, r24
 ba8:	ab 07       	cpc	r26, r27
 baa:	b0 e8       	ldi	r27, 0x80	; 128
 bac:	09 f0       	breq	.+2      	; 0xbb0 <__divsf3_pse+0x56>
 bae:	bb 0b       	sbc	r27, r27
 bb0:	80 2d       	mov	r24, r0
 bb2:	bf 01       	movw	r22, r30
 bb4:	ff 27       	eor	r31, r31
 bb6:	93 58       	subi	r25, 0x83	; 131
 bb8:	5f 4f       	sbci	r21, 0xFF	; 255
 bba:	3a f0       	brmi	.+14     	; 0xbca <__divsf3_pse+0x70>
 bbc:	9e 3f       	cpi	r25, 0xFE	; 254
 bbe:	51 05       	cpc	r21, r1
 bc0:	78 f0       	brcs	.+30     	; 0xbe0 <__divsf3_pse+0x86>
 bc2:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_inf>
 bc6:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__fp_szero>
 bca:	5f 3f       	cpi	r21, 0xFF	; 255
 bcc:	e4 f3       	brlt	.-8      	; 0xbc6 <__divsf3_pse+0x6c>
 bce:	98 3e       	cpi	r25, 0xE8	; 232
 bd0:	d4 f3       	brlt	.-12     	; 0xbc6 <__divsf3_pse+0x6c>
 bd2:	86 95       	lsr	r24
 bd4:	77 95       	ror	r23
 bd6:	67 95       	ror	r22
 bd8:	b7 95       	ror	r27
 bda:	f7 95       	ror	r31
 bdc:	9f 5f       	subi	r25, 0xFF	; 255
 bde:	c9 f7       	brne	.-14     	; 0xbd2 <__divsf3_pse+0x78>
 be0:	88 0f       	add	r24, r24
 be2:	91 1d       	adc	r25, r1
 be4:	96 95       	lsr	r25
 be6:	87 95       	ror	r24
 be8:	97 f9       	bld	r25, 7
 bea:	08 95       	ret
 bec:	e1 e0       	ldi	r30, 0x01	; 1
 bee:	66 0f       	add	r22, r22
 bf0:	77 1f       	adc	r23, r23
 bf2:	88 1f       	adc	r24, r24
 bf4:	bb 1f       	adc	r27, r27
 bf6:	62 17       	cp	r22, r18
 bf8:	73 07       	cpc	r23, r19
 bfa:	84 07       	cpc	r24, r20
 bfc:	ba 07       	cpc	r27, r26
 bfe:	20 f0       	brcs	.+8      	; 0xc08 <__divsf3_pse+0xae>
 c00:	62 1b       	sub	r22, r18
 c02:	73 0b       	sbc	r23, r19
 c04:	84 0b       	sbc	r24, r20
 c06:	ba 0b       	sbc	r27, r26
 c08:	ee 1f       	adc	r30, r30
 c0a:	88 f7       	brcc	.-30     	; 0xbee <__divsf3_pse+0x94>
 c0c:	e0 95       	com	r30
 c0e:	08 95       	ret

00000c10 <__fixsfsi>:
 c10:	0e 94 0f 06 	call	0xc1e	; 0xc1e <__fixunssfsi>
 c14:	68 94       	set
 c16:	b1 11       	cpse	r27, r1
 c18:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__fp_szero>
 c1c:	08 95       	ret

00000c1e <__fixunssfsi>:
 c1e:	0e 94 ab 06 	call	0xd56	; 0xd56 <__fp_splitA>
 c22:	88 f0       	brcs	.+34     	; 0xc46 <__fixunssfsi+0x28>
 c24:	9f 57       	subi	r25, 0x7F	; 127
 c26:	98 f0       	brcs	.+38     	; 0xc4e <__fixunssfsi+0x30>
 c28:	b9 2f       	mov	r27, r25
 c2a:	99 27       	eor	r25, r25
 c2c:	b7 51       	subi	r27, 0x17	; 23
 c2e:	b0 f0       	brcs	.+44     	; 0xc5c <__fixunssfsi+0x3e>
 c30:	e1 f0       	breq	.+56     	; 0xc6a <__fixunssfsi+0x4c>
 c32:	66 0f       	add	r22, r22
 c34:	77 1f       	adc	r23, r23
 c36:	88 1f       	adc	r24, r24
 c38:	99 1f       	adc	r25, r25
 c3a:	1a f0       	brmi	.+6      	; 0xc42 <__fixunssfsi+0x24>
 c3c:	ba 95       	dec	r27
 c3e:	c9 f7       	brne	.-14     	; 0xc32 <__fixunssfsi+0x14>
 c40:	14 c0       	rjmp	.+40     	; 0xc6a <__fixunssfsi+0x4c>
 c42:	b1 30       	cpi	r27, 0x01	; 1
 c44:	91 f0       	breq	.+36     	; 0xc6a <__fixunssfsi+0x4c>
 c46:	0e 94 c5 06 	call	0xd8a	; 0xd8a <__fp_zero>
 c4a:	b1 e0       	ldi	r27, 0x01	; 1
 c4c:	08 95       	ret
 c4e:	0c 94 c5 06 	jmp	0xd8a	; 0xd8a <__fp_zero>
 c52:	67 2f       	mov	r22, r23
 c54:	78 2f       	mov	r23, r24
 c56:	88 27       	eor	r24, r24
 c58:	b8 5f       	subi	r27, 0xF8	; 248
 c5a:	39 f0       	breq	.+14     	; 0xc6a <__fixunssfsi+0x4c>
 c5c:	b9 3f       	cpi	r27, 0xF9	; 249
 c5e:	cc f3       	brlt	.-14     	; 0xc52 <__fixunssfsi+0x34>
 c60:	86 95       	lsr	r24
 c62:	77 95       	ror	r23
 c64:	67 95       	ror	r22
 c66:	b3 95       	inc	r27
 c68:	d9 f7       	brne	.-10     	; 0xc60 <__fixunssfsi+0x42>
 c6a:	3e f4       	brtc	.+14     	; 0xc7a <__fixunssfsi+0x5c>
 c6c:	90 95       	com	r25
 c6e:	80 95       	com	r24
 c70:	70 95       	com	r23
 c72:	61 95       	neg	r22
 c74:	7f 4f       	sbci	r23, 0xFF	; 255
 c76:	8f 4f       	sbci	r24, 0xFF	; 255
 c78:	9f 4f       	sbci	r25, 0xFF	; 255
 c7a:	08 95       	ret

00000c7c <__floatunsisf>:
 c7c:	e8 94       	clt
 c7e:	09 c0       	rjmp	.+18     	; 0xc92 <__floatsisf+0x12>

00000c80 <__floatsisf>:
 c80:	97 fb       	bst	r25, 7
 c82:	3e f4       	brtc	.+14     	; 0xc92 <__floatsisf+0x12>
 c84:	90 95       	com	r25
 c86:	80 95       	com	r24
 c88:	70 95       	com	r23
 c8a:	61 95       	neg	r22
 c8c:	7f 4f       	sbci	r23, 0xFF	; 255
 c8e:	8f 4f       	sbci	r24, 0xFF	; 255
 c90:	9f 4f       	sbci	r25, 0xFF	; 255
 c92:	99 23       	and	r25, r25
 c94:	a9 f0       	breq	.+42     	; 0xcc0 <__floatsisf+0x40>
 c96:	f9 2f       	mov	r31, r25
 c98:	96 e9       	ldi	r25, 0x96	; 150
 c9a:	bb 27       	eor	r27, r27
 c9c:	93 95       	inc	r25
 c9e:	f6 95       	lsr	r31
 ca0:	87 95       	ror	r24
 ca2:	77 95       	ror	r23
 ca4:	67 95       	ror	r22
 ca6:	b7 95       	ror	r27
 ca8:	f1 11       	cpse	r31, r1
 caa:	f8 cf       	rjmp	.-16     	; 0xc9c <__floatsisf+0x1c>
 cac:	fa f4       	brpl	.+62     	; 0xcec <__floatsisf+0x6c>
 cae:	bb 0f       	add	r27, r27
 cb0:	11 f4       	brne	.+4      	; 0xcb6 <__floatsisf+0x36>
 cb2:	60 ff       	sbrs	r22, 0
 cb4:	1b c0       	rjmp	.+54     	; 0xcec <__floatsisf+0x6c>
 cb6:	6f 5f       	subi	r22, 0xFF	; 255
 cb8:	7f 4f       	sbci	r23, 0xFF	; 255
 cba:	8f 4f       	sbci	r24, 0xFF	; 255
 cbc:	9f 4f       	sbci	r25, 0xFF	; 255
 cbe:	16 c0       	rjmp	.+44     	; 0xcec <__floatsisf+0x6c>
 cc0:	88 23       	and	r24, r24
 cc2:	11 f0       	breq	.+4      	; 0xcc8 <__floatsisf+0x48>
 cc4:	96 e9       	ldi	r25, 0x96	; 150
 cc6:	11 c0       	rjmp	.+34     	; 0xcea <__floatsisf+0x6a>
 cc8:	77 23       	and	r23, r23
 cca:	21 f0       	breq	.+8      	; 0xcd4 <__floatsisf+0x54>
 ccc:	9e e8       	ldi	r25, 0x8E	; 142
 cce:	87 2f       	mov	r24, r23
 cd0:	76 2f       	mov	r23, r22
 cd2:	05 c0       	rjmp	.+10     	; 0xcde <__floatsisf+0x5e>
 cd4:	66 23       	and	r22, r22
 cd6:	71 f0       	breq	.+28     	; 0xcf4 <__floatsisf+0x74>
 cd8:	96 e8       	ldi	r25, 0x86	; 134
 cda:	86 2f       	mov	r24, r22
 cdc:	70 e0       	ldi	r23, 0x00	; 0
 cde:	60 e0       	ldi	r22, 0x00	; 0
 ce0:	2a f0       	brmi	.+10     	; 0xcec <__floatsisf+0x6c>
 ce2:	9a 95       	dec	r25
 ce4:	66 0f       	add	r22, r22
 ce6:	77 1f       	adc	r23, r23
 ce8:	88 1f       	adc	r24, r24
 cea:	da f7       	brpl	.-10     	; 0xce2 <__floatsisf+0x62>
 cec:	88 0f       	add	r24, r24
 cee:	96 95       	lsr	r25
 cf0:	87 95       	ror	r24
 cf2:	97 f9       	bld	r25, 7
 cf4:	08 95       	ret

00000cf6 <__fp_inf>:
 cf6:	97 f9       	bld	r25, 7
 cf8:	9f 67       	ori	r25, 0x7F	; 127
 cfa:	80 e8       	ldi	r24, 0x80	; 128
 cfc:	70 e0       	ldi	r23, 0x00	; 0
 cfe:	60 e0       	ldi	r22, 0x00	; 0
 d00:	08 95       	ret

00000d02 <__fp_nan>:
 d02:	9f ef       	ldi	r25, 0xFF	; 255
 d04:	80 ec       	ldi	r24, 0xC0	; 192
 d06:	08 95       	ret

00000d08 <__fp_pscA>:
 d08:	00 24       	eor	r0, r0
 d0a:	0a 94       	dec	r0
 d0c:	16 16       	cp	r1, r22
 d0e:	17 06       	cpc	r1, r23
 d10:	18 06       	cpc	r1, r24
 d12:	09 06       	cpc	r0, r25
 d14:	08 95       	ret

00000d16 <__fp_pscB>:
 d16:	00 24       	eor	r0, r0
 d18:	0a 94       	dec	r0
 d1a:	12 16       	cp	r1, r18
 d1c:	13 06       	cpc	r1, r19
 d1e:	14 06       	cpc	r1, r20
 d20:	05 06       	cpc	r0, r21
 d22:	08 95       	ret

00000d24 <__fp_round>:
 d24:	09 2e       	mov	r0, r25
 d26:	03 94       	inc	r0
 d28:	00 0c       	add	r0, r0
 d2a:	11 f4       	brne	.+4      	; 0xd30 <__fp_round+0xc>
 d2c:	88 23       	and	r24, r24
 d2e:	52 f0       	brmi	.+20     	; 0xd44 <__fp_round+0x20>
 d30:	bb 0f       	add	r27, r27
 d32:	40 f4       	brcc	.+16     	; 0xd44 <__fp_round+0x20>
 d34:	bf 2b       	or	r27, r31
 d36:	11 f4       	brne	.+4      	; 0xd3c <__fp_round+0x18>
 d38:	60 ff       	sbrs	r22, 0
 d3a:	04 c0       	rjmp	.+8      	; 0xd44 <__fp_round+0x20>
 d3c:	6f 5f       	subi	r22, 0xFF	; 255
 d3e:	7f 4f       	sbci	r23, 0xFF	; 255
 d40:	8f 4f       	sbci	r24, 0xFF	; 255
 d42:	9f 4f       	sbci	r25, 0xFF	; 255
 d44:	08 95       	ret

00000d46 <__fp_split3>:
 d46:	57 fd       	sbrc	r21, 7
 d48:	90 58       	subi	r25, 0x80	; 128
 d4a:	44 0f       	add	r20, r20
 d4c:	55 1f       	adc	r21, r21
 d4e:	59 f0       	breq	.+22     	; 0xd66 <__fp_splitA+0x10>
 d50:	5f 3f       	cpi	r21, 0xFF	; 255
 d52:	71 f0       	breq	.+28     	; 0xd70 <__fp_splitA+0x1a>
 d54:	47 95       	ror	r20

00000d56 <__fp_splitA>:
 d56:	88 0f       	add	r24, r24
 d58:	97 fb       	bst	r25, 7
 d5a:	99 1f       	adc	r25, r25
 d5c:	61 f0       	breq	.+24     	; 0xd76 <__fp_splitA+0x20>
 d5e:	9f 3f       	cpi	r25, 0xFF	; 255
 d60:	79 f0       	breq	.+30     	; 0xd80 <__fp_splitA+0x2a>
 d62:	87 95       	ror	r24
 d64:	08 95       	ret
 d66:	12 16       	cp	r1, r18
 d68:	13 06       	cpc	r1, r19
 d6a:	14 06       	cpc	r1, r20
 d6c:	55 1f       	adc	r21, r21
 d6e:	f2 cf       	rjmp	.-28     	; 0xd54 <__fp_split3+0xe>
 d70:	46 95       	lsr	r20
 d72:	f1 df       	rcall	.-30     	; 0xd56 <__fp_splitA>
 d74:	08 c0       	rjmp	.+16     	; 0xd86 <__fp_splitA+0x30>
 d76:	16 16       	cp	r1, r22
 d78:	17 06       	cpc	r1, r23
 d7a:	18 06       	cpc	r1, r24
 d7c:	99 1f       	adc	r25, r25
 d7e:	f1 cf       	rjmp	.-30     	; 0xd62 <__fp_splitA+0xc>
 d80:	86 95       	lsr	r24
 d82:	71 05       	cpc	r23, r1
 d84:	61 05       	cpc	r22, r1
 d86:	08 94       	sec
 d88:	08 95       	ret

00000d8a <__fp_zero>:
 d8a:	e8 94       	clt

00000d8c <__fp_szero>:
 d8c:	bb 27       	eor	r27, r27
 d8e:	66 27       	eor	r22, r22
 d90:	77 27       	eor	r23, r23
 d92:	cb 01       	movw	r24, r22
 d94:	97 f9       	bld	r25, 7
 d96:	08 95       	ret

00000d98 <__mulsf3>:
 d98:	0e 94 df 06 	call	0xdbe	; 0xdbe <__mulsf3x>
 d9c:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__fp_round>
 da0:	0e 94 84 06 	call	0xd08	; 0xd08 <__fp_pscA>
 da4:	38 f0       	brcs	.+14     	; 0xdb4 <__mulsf3+0x1c>
 da6:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fp_pscB>
 daa:	20 f0       	brcs	.+8      	; 0xdb4 <__mulsf3+0x1c>
 dac:	95 23       	and	r25, r21
 dae:	11 f0       	breq	.+4      	; 0xdb4 <__mulsf3+0x1c>
 db0:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_inf>
 db4:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__fp_nan>
 db8:	11 24       	eor	r1, r1
 dba:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__fp_szero>

00000dbe <__mulsf3x>:
 dbe:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fp_split3>
 dc2:	70 f3       	brcs	.-36     	; 0xda0 <__mulsf3+0x8>

00000dc4 <__mulsf3_pse>:
 dc4:	95 9f       	mul	r25, r21
 dc6:	c1 f3       	breq	.-16     	; 0xdb8 <__mulsf3+0x20>
 dc8:	95 0f       	add	r25, r21
 dca:	50 e0       	ldi	r21, 0x00	; 0
 dcc:	55 1f       	adc	r21, r21
 dce:	62 9f       	mul	r22, r18
 dd0:	f0 01       	movw	r30, r0
 dd2:	72 9f       	mul	r23, r18
 dd4:	bb 27       	eor	r27, r27
 dd6:	f0 0d       	add	r31, r0
 dd8:	b1 1d       	adc	r27, r1
 dda:	63 9f       	mul	r22, r19
 ddc:	aa 27       	eor	r26, r26
 dde:	f0 0d       	add	r31, r0
 de0:	b1 1d       	adc	r27, r1
 de2:	aa 1f       	adc	r26, r26
 de4:	64 9f       	mul	r22, r20
 de6:	66 27       	eor	r22, r22
 de8:	b0 0d       	add	r27, r0
 dea:	a1 1d       	adc	r26, r1
 dec:	66 1f       	adc	r22, r22
 dee:	82 9f       	mul	r24, r18
 df0:	22 27       	eor	r18, r18
 df2:	b0 0d       	add	r27, r0
 df4:	a1 1d       	adc	r26, r1
 df6:	62 1f       	adc	r22, r18
 df8:	73 9f       	mul	r23, r19
 dfa:	b0 0d       	add	r27, r0
 dfc:	a1 1d       	adc	r26, r1
 dfe:	62 1f       	adc	r22, r18
 e00:	83 9f       	mul	r24, r19
 e02:	a0 0d       	add	r26, r0
 e04:	61 1d       	adc	r22, r1
 e06:	22 1f       	adc	r18, r18
 e08:	74 9f       	mul	r23, r20
 e0a:	33 27       	eor	r19, r19
 e0c:	a0 0d       	add	r26, r0
 e0e:	61 1d       	adc	r22, r1
 e10:	23 1f       	adc	r18, r19
 e12:	84 9f       	mul	r24, r20
 e14:	60 0d       	add	r22, r0
 e16:	21 1d       	adc	r18, r1
 e18:	82 2f       	mov	r24, r18
 e1a:	76 2f       	mov	r23, r22
 e1c:	6a 2f       	mov	r22, r26
 e1e:	11 24       	eor	r1, r1
 e20:	9f 57       	subi	r25, 0x7F	; 127
 e22:	50 40       	sbci	r21, 0x00	; 0
 e24:	9a f0       	brmi	.+38     	; 0xe4c <__mulsf3_pse+0x88>
 e26:	f1 f0       	breq	.+60     	; 0xe64 <__mulsf3_pse+0xa0>
 e28:	88 23       	and	r24, r24
 e2a:	4a f0       	brmi	.+18     	; 0xe3e <__mulsf3_pse+0x7a>
 e2c:	ee 0f       	add	r30, r30
 e2e:	ff 1f       	adc	r31, r31
 e30:	bb 1f       	adc	r27, r27
 e32:	66 1f       	adc	r22, r22
 e34:	77 1f       	adc	r23, r23
 e36:	88 1f       	adc	r24, r24
 e38:	91 50       	subi	r25, 0x01	; 1
 e3a:	50 40       	sbci	r21, 0x00	; 0
 e3c:	a9 f7       	brne	.-22     	; 0xe28 <__mulsf3_pse+0x64>
 e3e:	9e 3f       	cpi	r25, 0xFE	; 254
 e40:	51 05       	cpc	r21, r1
 e42:	80 f0       	brcs	.+32     	; 0xe64 <__mulsf3_pse+0xa0>
 e44:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <__fp_inf>
 e48:	0c 94 c6 06 	jmp	0xd8c	; 0xd8c <__fp_szero>
 e4c:	5f 3f       	cpi	r21, 0xFF	; 255
 e4e:	e4 f3       	brlt	.-8      	; 0xe48 <__mulsf3_pse+0x84>
 e50:	98 3e       	cpi	r25, 0xE8	; 232
 e52:	d4 f3       	brlt	.-12     	; 0xe48 <__mulsf3_pse+0x84>
 e54:	86 95       	lsr	r24
 e56:	77 95       	ror	r23
 e58:	67 95       	ror	r22
 e5a:	b7 95       	ror	r27
 e5c:	f7 95       	ror	r31
 e5e:	e7 95       	ror	r30
 e60:	9f 5f       	subi	r25, 0xFF	; 255
 e62:	c1 f7       	brne	.-16     	; 0xe54 <__mulsf3_pse+0x90>
 e64:	fe 2b       	or	r31, r30
 e66:	88 0f       	add	r24, r24
 e68:	91 1d       	adc	r25, r1
 e6a:	96 95       	lsr	r25
 e6c:	87 95       	ror	r24
 e6e:	97 f9       	bld	r25, 7
 e70:	08 95       	ret

00000e72 <__divmodsi4>:
 e72:	05 2e       	mov	r0, r21
 e74:	97 fb       	bst	r25, 7
 e76:	1e f4       	brtc	.+6      	; 0xe7e <__divmodsi4+0xc>
 e78:	00 94       	com	r0
 e7a:	0e 94 50 07 	call	0xea0	; 0xea0 <__negsi2>
 e7e:	57 fd       	sbrc	r21, 7
 e80:	07 d0       	rcall	.+14     	; 0xe90 <__divmodsi4_neg2>
 e82:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__udivmodsi4>
 e86:	07 fc       	sbrc	r0, 7
 e88:	03 d0       	rcall	.+6      	; 0xe90 <__divmodsi4_neg2>
 e8a:	4e f4       	brtc	.+18     	; 0xe9e <__divmodsi4_exit>
 e8c:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__negsi2>

00000e90 <__divmodsi4_neg2>:
 e90:	50 95       	com	r21
 e92:	40 95       	com	r20
 e94:	30 95       	com	r19
 e96:	21 95       	neg	r18
 e98:	3f 4f       	sbci	r19, 0xFF	; 255
 e9a:	4f 4f       	sbci	r20, 0xFF	; 255
 e9c:	5f 4f       	sbci	r21, 0xFF	; 255

00000e9e <__divmodsi4_exit>:
 e9e:	08 95       	ret

00000ea0 <__negsi2>:
 ea0:	90 95       	com	r25
 ea2:	80 95       	com	r24
 ea4:	70 95       	com	r23
 ea6:	61 95       	neg	r22
 ea8:	7f 4f       	sbci	r23, 0xFF	; 255
 eaa:	8f 4f       	sbci	r24, 0xFF	; 255
 eac:	9f 4f       	sbci	r25, 0xFF	; 255
 eae:	08 95       	ret

00000eb0 <__udivmodsi4>:
 eb0:	a1 e2       	ldi	r26, 0x21	; 33
 eb2:	1a 2e       	mov	r1, r26
 eb4:	aa 1b       	sub	r26, r26
 eb6:	bb 1b       	sub	r27, r27
 eb8:	fd 01       	movw	r30, r26
 eba:	0d c0       	rjmp	.+26     	; 0xed6 <__udivmodsi4_ep>

00000ebc <__udivmodsi4_loop>:
 ebc:	aa 1f       	adc	r26, r26
 ebe:	bb 1f       	adc	r27, r27
 ec0:	ee 1f       	adc	r30, r30
 ec2:	ff 1f       	adc	r31, r31
 ec4:	a2 17       	cp	r26, r18
 ec6:	b3 07       	cpc	r27, r19
 ec8:	e4 07       	cpc	r30, r20
 eca:	f5 07       	cpc	r31, r21
 ecc:	20 f0       	brcs	.+8      	; 0xed6 <__udivmodsi4_ep>
 ece:	a2 1b       	sub	r26, r18
 ed0:	b3 0b       	sbc	r27, r19
 ed2:	e4 0b       	sbc	r30, r20
 ed4:	f5 0b       	sbc	r31, r21

00000ed6 <__udivmodsi4_ep>:
 ed6:	66 1f       	adc	r22, r22
 ed8:	77 1f       	adc	r23, r23
 eda:	88 1f       	adc	r24, r24
 edc:	99 1f       	adc	r25, r25
 ede:	1a 94       	dec	r1
 ee0:	69 f7       	brne	.-38     	; 0xebc <__udivmodsi4_loop>
 ee2:	60 95       	com	r22
 ee4:	70 95       	com	r23
 ee6:	80 95       	com	r24
 ee8:	90 95       	com	r25
 eea:	9b 01       	movw	r18, r22
 eec:	ac 01       	movw	r20, r24
 eee:	bd 01       	movw	r22, r26
 ef0:	cf 01       	movw	r24, r30
 ef2:	08 95       	ret

00000ef4 <_exit>:
 ef4:	f8 94       	cli

00000ef6 <__stop_program>:
 ef6:	ff cf       	rjmp	.-2      	; 0xef6 <__stop_program>
